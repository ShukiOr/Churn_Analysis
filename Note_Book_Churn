{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f6d04aac-faaf-4fd9-9a9f-6483ce501865",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d0c109e1-8704-4e2c-ae0b-1758ec20ae17",
   "metadata": {},
   "source": [
    "Change the path to the Excel file by using the URL in the following line. dont forget to add double dash (like me)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fc2ac0e8-a231-4553-8402-e92b782e1345",
   "metadata": {},
   "outputs": [],
   "source": [
    "path = \"C:\\\\Users\\\\User\\\\Desktop\\\\2021 TECHNION\\\\projects\\Python Data Analysis Project\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d1ed4497-816a-4d19-84b4-0be581ed7314",
   "metadata": {},
   "source": [
    "<br>\n",
    "<hr class=\"dotted\">\n",
    "<br>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2529c2f0-f596-4f8a-af0b-1e8bc3ad5120",
   "metadata": {},
   "outputs": [],
   "source": [
    "company = pd.read_csv(\"%s/churn.csv\" % path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a1a472d5-ef38-421c-b3d8-715695780bce",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "company.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "082c8182-4b33-4e3d-b0b8-e76893d62cf5",
   "metadata": {},
   "source": [
    "<br>\n",
    "<hr class=\"dotted\">\n",
    "<br>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9d77afdd-9a6b-4eb6-ad8f-355bde78cf85",
   "metadata": {},
   "source": [
    "### Cleaning Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "097456eb-9e11-4163-9fdd-1cfbb53d5d51",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "company.isna().sum()\n",
    "#There are no missing values in the data set, there for data cleaning\\repalcing will take place per column if necessary"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "471e2080-a3a5-4e4a-88dd-9b0f4371dd19",
   "metadata": {},
   "source": [
    "#### To Do...\n",
    "\n",
    "1. Senior citizen column has no value - i recomend to delete it from the data frame."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "079a90ad-7e68-47e5-bb46-8d9406509444",
   "metadata": {},
   "source": [
    "<br>\n",
    "<hr class=\"dotted\">\n",
    "<br>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "95a0578b-ffea-4512-a56c-c35c2fc28d38",
   "metadata": {},
   "outputs": [],
   "source": [
    "company.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b4d7b28c-3598-4e89-9963-c1df194b613b",
   "metadata": {},
   "source": [
    "We can see in the tenure column (customer loyalty) that 50% of the customer remains active for 2.5 years.\n",
    "Up to 25% (0-25) of costumers wont last the first year."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1c4210cd-0268-4a92-ab0a-1619396c9461",
   "metadata": {},
   "source": [
    "<br>\n",
    "<hr class=\"dotted\">\n",
    "<br>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "82af0239-ab7a-4297-9989-4cb353d51ef9",
   "metadata": {},
   "source": [
    "## Exploring the Data\n",
    "Before we choose the path of analysis first we need to explore the data by parametrs and lables.\n",
    "\n",
    "This will help us to understand the customer behavior - then we will know what correlation we need to explore and analyse. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "33e9e609-3ce3-46e9-8feb-2774eecd4e29",
   "metadata": {},
   "source": [
    "<br>\n",
    "<hr class=\"dotted\">\n",
    "<br>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "85ea550b-e4f0-4af4-beba-b22ca22dd12f",
   "metadata": {},
   "source": [
    "### Customer Chek \n",
    "First i want to check how many customers in the data set, how many of them are active clients and how many are not."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 301,
   "id": "06b3662a-435d-422c-a5ec-4253cfcfa52c",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# First, i'm changing the string value in \"churn\" column to numerical value\n",
    "company.loc[company.Churn == 'No', 'Churn'] = 0\n",
    "company.loc[company.Churn == 'Yes', 'Churn'] = 1\n",
    "company = company.astype({\"Churn\": 'int64'})   #   --> Change \"Churn\" to int"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 302,
   "id": "9b17f280-62cf-4d77-bf77-176dde60ecb5",
   "metadata": {},
   "outputs": [],
   "source": [
    "customers = len(company)\n",
    "churn_no = sum(company['Churn']==0)\n",
    "churn_yes = sum(company['Churn']==1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 303,
   "id": "38a2fb4b-330c-4c60-86eb-bf05028747e1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "We have 7043 clients. only 1869 of them are active, and 5174 is unactive. (26.536987%) actives\n"
     ]
    }
   ],
   "source": [
    "print(\"We have %d clients. only %d of them are active, and %d is unactive. (%f%%) actives\" % (customers, churn_yes,churn_no ,(churn_yes/customers*100)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4b348aa6-7ed5-49c5-ba44-90807a672853",
   "metadata": {},
   "source": [
    "<br>\n",
    "<hr class=\"dotted\">\n",
    "<br>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6540e0f7-1492-4fee-a73f-6fbb822a349e",
   "metadata": {},
   "source": [
    "### Gender Oriented Clients\n",
    "Is there a diffrance in customers loyalty between Male or Female?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 304,
   "id": "3db9f384-6a40-475b-a17c-909004fc40cf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">Churn</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>sum</th>\n",
       "      <th>mean</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>gender</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Female</th>\n",
       "      <td>3488</td>\n",
       "      <td>939</td>\n",
       "      <td>0.269209</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Male</th>\n",
       "      <td>3555</td>\n",
       "      <td>930</td>\n",
       "      <td>0.261603</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Churn               \n",
       "       count  sum      mean\n",
       "gender                     \n",
       "Female  3488  939  0.269209\n",
       "Male    3555  930  0.261603"
      ]
     },
     "execution_count": 304,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "company.groupby('gender').agg({'Churn':['count','sum','mean']})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0cb5f485-233f-4fed-9e49-780fc928b5aa",
   "metadata": {},
   "source": [
    "As we can see, the volume of Female customers is almost the same as Male custumers. \n",
    "\n",
    "There for Gender is not an parameter worth of exploring in this contact"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "07e15615-f710-4640-9ae3-c1c64f09c42d",
   "metadata": {},
   "source": [
    "<br>\n",
    "<hr class=\"dotted\">\n",
    "<br>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7d046397-9f42-44a7-8560-f8100a5af563",
   "metadata": {},
   "source": [
    "## Paying Customer Behavior\n",
    "- How many paying customer per active year?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 326,
   "id": "576823cd-818f-4c70-8fbe-4a2e13ef20be",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"4\" halign=\"left\">MonthlyCharges</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>sum</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tenuregroup</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2069</td>\n",
       "      <td>115979.9</td>\n",
       "      <td>18.75</td>\n",
       "      <td>111.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1047</td>\n",
       "      <td>63713.4</td>\n",
       "      <td>18.80</td>\n",
       "      <td>112.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>876</td>\n",
       "      <td>57052.0</td>\n",
       "      <td>18.25</td>\n",
       "      <td>116.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>748</td>\n",
       "      <td>49690.1</td>\n",
       "      <td>18.55</td>\n",
       "      <td>115.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>820</td>\n",
       "      <td>57182.8</td>\n",
       "      <td>18.40</td>\n",
       "      <td>117.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1121</td>\n",
       "      <td>83286.5</td>\n",
       "      <td>19.10</td>\n",
       "      <td>118.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>362</td>\n",
       "      <td>29211.9</td>\n",
       "      <td>19.30</td>\n",
       "      <td>118.75</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            MonthlyCharges                         \n",
       "                     count       sum    min     max\n",
       "tenuregroup                                        \n",
       "1                     2069  115979.9  18.75  111.40\n",
       "2                     1047   63713.4  18.80  112.95\n",
       "3                      876   57052.0  18.25  116.25\n",
       "4                      748   49690.1  18.55  115.65\n",
       "5                      820   57182.8  18.40  117.45\n",
       "6                     1121   83286.5  19.10  118.65\n",
       "7                      362   29211.9  19.30  118.75"
      ]
     },
     "execution_count": 326,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "company.groupby('tenuregroup').agg({'MonthlyCharges':['count',sum,'min','max']})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d7fa084e-c61e-4ce6-9e11-423a63f28f38",
   "metadata": {},
   "source": [
    "In the table above we can see:\n",
    "- The AVG of paying customer per year (count)\n",
    "- The astimated REV per year (sum)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2052cc85-5dcc-4dd5-af16-aea0839bc5b0",
   "metadata": {},
   "source": [
    "## Note to self - save the GroupBy as DataFrame <font color='red'>(OR - TO DO)</font>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "31135dda-df38-4b1b-a9a9-8398c1b1573b",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# A new value (to use mor easely) with the commend in it\n",
    "paying_customers=company.groupby('tenuregroup').agg({'MonthlyCharges':['count',sum,'min','max']})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ba53fa4b-10e4-4a41-a39c-ba2217b74650",
   "metadata": {
    "tags": []
   },
   "source": [
    "<br>\n",
    "<hr class=\"dotted\">\n",
    "<br>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a8221be-a620-42ef-b457-ae70a3a14483",
   "metadata": {},
   "source": [
    "### Customer loyalty \n",
    "When are clients likely to abandon the our company? where is their ba"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 345,
   "id": "66e488b8-7fd2-4562-9e12-ac710e1ea3eb",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Fisrt i will redefine the customers period of use (tenue) by subgroups\n",
    "# The new values will be added to a new culomn\n",
    "company['tenure_year'] = None\n",
    "\n",
    "#The subgroup refers to period of years (12 months)\n",
    "company.loc[(company['tenure'] < 12.),'tenure_year'] = 1\n",
    "company.loc[(company['tenure'] >=12.) &(company['tenure'] < 24.),'tenure_year'] = 2\n",
    "company.loc[(company['tenure'] >=24.) &(company['tenure'] < 36.),'tenure_year'] = 3\n",
    "company.loc[(company['tenure'] >=36) &(company['tenure'] < 48),'tenure_year'] = 4\n",
    "company.loc[(company['tenure'] >=48) &(company['tenure'] < 60),'tenure_year'] = 5\n",
    "company.loc[(company['tenure'] >=60.) &(company['tenure'] < 72.),'tenure_year'] = 6\n",
    "company.loc[(company['tenure'] >=72.) &(company['tenure'] < 84.),'tenure_year'] = 7"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 346,
   "id": "ef73ed1f-fd85-4086-adea-833265de41ec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">Churn</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>sum</th>\n",
       "      <th>mean</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tenure_year</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2069</td>\n",
       "      <td>999</td>\n",
       "      <td>0.482842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1047</td>\n",
       "      <td>309</td>\n",
       "      <td>0.295129</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>876</td>\n",
       "      <td>193</td>\n",
       "      <td>0.220320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>748</td>\n",
       "      <td>146</td>\n",
       "      <td>0.195187</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>820</td>\n",
       "      <td>123</td>\n",
       "      <td>0.150000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1121</td>\n",
       "      <td>93</td>\n",
       "      <td>0.082962</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>362</td>\n",
       "      <td>6</td>\n",
       "      <td>0.016575</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Churn               \n",
       "            count  sum      mean\n",
       "tenure_year                     \n",
       "1            2069  999  0.482842\n",
       "2            1047  309  0.295129\n",
       "3             876  193  0.220320\n",
       "4             748  146  0.195187\n",
       "5             820  123  0.150000\n",
       "6            1121   93  0.082962\n",
       "7             362    6  0.016575"
      ]
     },
     "execution_count": 346,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "company.groupby('tenure_year').agg({'Churn':['count',sum,'mean']})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a799eebb-35c3-4111-9bb9-828b30dff009",
   "metadata": {},
   "source": [
    "As we can see 48.2% of our customers has abandom the company after the first buisness year.\n",
    "\n",
    "The question is why?\n",
    "\n",
    "The other groups are not important at this time beacuse we want to know why customers dont survive the first buisness year."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "83f08fbf-6f3a-4024-8fa8-e4dc2f873a89",
   "metadata": {},
   "source": [
    "### <font color='RED'>NEED TO ADD VISUALIZASION </font>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7a600917-2e17-4432-b614-6b03692a638e",
   "metadata": {},
   "source": [
    "<br>\n",
    "<hr class=\"dotted\">\n",
    "<br>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f630e10-e15c-4974-9ca8-47176aff2a42",
   "metadata": {},
   "source": [
    "### Service valume \n",
    "\n",
    "The company servies are:\n",
    "- PhoneService\n",
    "- MultipleLines\n",
    "- InternetService\n",
    "- OnlineSecurity\n",
    "- OnlineBackup\n",
    "- DeviceProtection\n",
    "- TechSupport\n",
    "- StreamingTV\n",
    "- StreamingMovies\n",
    "\n",
    "We want to explore how many customers are active in each service (one by one).\n",
    "\n",
    "After that we want to check the bounce rate of the services listed above."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "af4b4183-437e-43c2-8228-7a7e2eb054c7",
   "metadata": {},
   "source": [
    "<br>\n",
    "<hr class=\"dotted\">\n",
    "<br>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "315d85b3-32da-4682-b3e4-c8c3dec7c248",
   "metadata": {},
   "source": [
    "### Service valume - PhoneService"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 308,
   "id": "4bdf2b3b-d3c3-4b29-b5b5-b1e769f9503f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">Churn</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>sum</th>\n",
       "      <th>mean</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PhoneService</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>No</th>\n",
       "      <td>682</td>\n",
       "      <td>170</td>\n",
       "      <td>0.249267</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>6361</td>\n",
       "      <td>1699</td>\n",
       "      <td>0.267096</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Churn                \n",
       "             count   sum      mean\n",
       "PhoneService                      \n",
       "No             682   170  0.249267\n",
       "Yes           6361  1699  0.267096"
      ]
     },
     "execution_count": 308,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "company.groupby('PhoneService').agg({'Churn':['count','sum','mean']})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "875049b7-f825-4708-b983-1818bd8f67c7",
   "metadata": {},
   "source": [
    "The phone servise has a GENERAL bounce rate of 26.7%.\n",
    "\n",
    "The next code will explore the bounce rate by year of use."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 347,
   "id": "b5a88755-d59f-4719-91d6-dd4a3d85af8c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">Churn</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>sum</th>\n",
       "      <th>mean</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tenure_year</th>\n",
       "      <th>PhoneService</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">1</th>\n",
       "      <th>No</th>\n",
       "      <td>206</td>\n",
       "      <td>101</td>\n",
       "      <td>0.490291</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>1863</td>\n",
       "      <td>898</td>\n",
       "      <td>0.482018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">2</th>\n",
       "      <th>No</th>\n",
       "      <td>94</td>\n",
       "      <td>24</td>\n",
       "      <td>0.255319</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>953</td>\n",
       "      <td>285</td>\n",
       "      <td>0.299056</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">3</th>\n",
       "      <th>No</th>\n",
       "      <td>84</td>\n",
       "      <td>12</td>\n",
       "      <td>0.142857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>792</td>\n",
       "      <td>181</td>\n",
       "      <td>0.228535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">4</th>\n",
       "      <th>No</th>\n",
       "      <td>84</td>\n",
       "      <td>16</td>\n",
       "      <td>0.190476</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>664</td>\n",
       "      <td>130</td>\n",
       "      <td>0.195783</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">5</th>\n",
       "      <th>No</th>\n",
       "      <td>84</td>\n",
       "      <td>12</td>\n",
       "      <td>0.142857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>736</td>\n",
       "      <td>111</td>\n",
       "      <td>0.150815</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">6</th>\n",
       "      <th>No</th>\n",
       "      <td>99</td>\n",
       "      <td>4</td>\n",
       "      <td>0.040404</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>1022</td>\n",
       "      <td>89</td>\n",
       "      <td>0.087084</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">7</th>\n",
       "      <th>No</th>\n",
       "      <td>31</td>\n",
       "      <td>1</td>\n",
       "      <td>0.032258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>331</td>\n",
       "      <td>5</td>\n",
       "      <td>0.015106</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         Churn               \n",
       "                         count  sum      mean\n",
       "tenure_year PhoneService                     \n",
       "1           No             206  101  0.490291\n",
       "            Yes           1863  898  0.482018\n",
       "2           No              94   24  0.255319\n",
       "            Yes            953  285  0.299056\n",
       "3           No              84   12  0.142857\n",
       "            Yes            792  181  0.228535\n",
       "4           No              84   16  0.190476\n",
       "            Yes            664  130  0.195783\n",
       "5           No              84   12  0.142857\n",
       "            Yes            736  111  0.150815\n",
       "6           No              99    4  0.040404\n",
       "            Yes           1022   89  0.087084\n",
       "7           No              31    1  0.032258\n",
       "            Yes            331    5  0.015106"
      ]
     },
     "execution_count": 347,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "company.groupby(['tenure_year','PhoneService']).agg({'Churn':['count',sum,'mean']})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "341711bc-27bd-4790-9eb4-84beaaaa23fb",
   "metadata": {},
   "source": [
    "- Its highly likely that up to 50% of the phone servise purcheses will be cancled within the first buisness year.\n",
    "- Clients who remain active, show loyal behavior (the bounce rate decrising every active year).\n",
    "- 50% last more then one year. With decrising bounce rate, all together the GENERAL bounce rate is 26.7% "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 331,
   "id": "403fa8b4-2651-486c-994c-1361db77bdaa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>MonthlyCharges</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>sum</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tenuregroup</th>\n",
       "      <th>PhoneService</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">1</th>\n",
       "      <th>No</th>\n",
       "      <td>7058.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>108921.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">2</th>\n",
       "      <th>No</th>\n",
       "      <td>3668.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>60045.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">3</th>\n",
       "      <th>No</th>\n",
       "      <td>3548.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>53503.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">4</th>\n",
       "      <th>No</th>\n",
       "      <td>3674.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>46015.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">5</th>\n",
       "      <th>No</th>\n",
       "      <td>3883.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>53299.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">6</th>\n",
       "      <th>No</th>\n",
       "      <td>4981.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>78305.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">7</th>\n",
       "      <th>No</th>\n",
       "      <td>1848.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>27363.55</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         MonthlyCharges\n",
       "                                    sum\n",
       "tenuregroup PhoneService               \n",
       "1           No                  7058.65\n",
       "            Yes               108921.25\n",
       "2           No                  3668.10\n",
       "            Yes                60045.30\n",
       "3           No                  3548.60\n",
       "            Yes                53503.40\n",
       "4           No                  3674.75\n",
       "            Yes                46015.35\n",
       "5           No                  3883.70\n",
       "            Yes                53299.10\n",
       "6           No                  4981.35\n",
       "            Yes                78305.15\n",
       "7           No                  1848.35\n",
       "            Yes                27363.55"
      ]
     },
     "execution_count": 331,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "company.groupby(['tenure_year','PhoneService']).agg({'MonthlyCharges':[sum]})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "34c664e8-b3f4-4cac-a37a-75098dad4125",
   "metadata": {},
   "outputs": [],
   "source": [
    "g = sns.catplot(\n",
    "    data=company, kind=\"bar\",\n",
    "    x=\"tenure_year\", y=\"PhoneService\", hue=\"MonthlyCharges\",\n",
    "    ci=\"sd\", palette=\"dark\", alpha=.6, height=6\n",
    ")\n",
    "g.despine(left=True)\n",
    "g.set_axis_labels(\"tenure_year\", \"PhoneService (g)\")\n",
    "g.legend.set_title(\"\")\n",
    "g"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5425f053-2cfa-4cfa-acc6-9158c276cc3b",
   "metadata": {},
   "source": [
    "<br>\n",
    "<hr class=\"dotted\">\n",
    "<br>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db8065d5-31e8-4a6f-b64e-4a496d57206b",
   "metadata": {},
   "source": [
    "### Service valume - MultipleLines"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 310,
   "id": "59e4c99e-32e2-4ae9-be56-f9fb7c7b4a4d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">Churn</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>sum</th>\n",
       "      <th>mean</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MultipleLines</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>No</th>\n",
       "      <td>3390</td>\n",
       "      <td>849</td>\n",
       "      <td>0.250442</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>No phone service</th>\n",
       "      <td>682</td>\n",
       "      <td>170</td>\n",
       "      <td>0.249267</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>2971</td>\n",
       "      <td>850</td>\n",
       "      <td>0.286099</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 Churn               \n",
       "                 count  sum      mean\n",
       "MultipleLines                        \n",
       "No                3390  849  0.250442\n",
       "No phone service   682  170  0.249267\n",
       "Yes               2971  850  0.286099"
      ]
     },
     "execution_count": 310,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "company.groupby('MultipleLines').agg({'Churn':['count','sum','mean']})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "30f4ceac-5079-47e5-828b-1c4fc93c22fd",
   "metadata": {},
   "source": [
    "- Frome 7043 clients 28.6% of them has or have used a Multiple Line servises.\n",
    "- 10% of the GENERAL customers has no use for this servise (based on the count value)\n",
    "- Quarter of this survise customers will cancel the servise along the way\n",
    "- Lets find out when?\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 311,
   "id": "99d1b9e3-1347-4209-a6c6-94071166ba1d",
   "metadata": {},
   "outputs": [],
   "source": [
    "company['ML_group'] = None\n",
    "\n",
    "#The subgroup refers to period of years (12 months)\n",
    "company.loc[(company['MultipleLines']== 'No'),'ML_group'] = 0\n",
    "company.loc[(company['MultipleLines']=='Yes'),'ML_group'] = 1\n",
    "company.loc[(company['MultipleLines']=='No phone service'),'ML_group'] = 3\n",
    "company = company.astype({\"ML_group\": 'int64'}) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 348,
   "id": "ad532411-2971-4b61-9bff-2856c16d09bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">Churn</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>sum</th>\n",
       "      <th>mean</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ML_group</th>\n",
       "      <th>tenure_year</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"7\" valign=\"top\">0</th>\n",
       "      <th>1</th>\n",
       "      <td>1403</td>\n",
       "      <td>598</td>\n",
       "      <td>0.426230</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>580</td>\n",
       "      <td>125</td>\n",
       "      <td>0.215517</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>414</td>\n",
       "      <td>55</td>\n",
       "      <td>0.132850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>322</td>\n",
       "      <td>40</td>\n",
       "      <td>0.124224</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>307</td>\n",
       "      <td>21</td>\n",
       "      <td>0.068404</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>313</td>\n",
       "      <td>10</td>\n",
       "      <td>0.031949</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>51</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"7\" valign=\"top\">1</th>\n",
       "      <th>1</th>\n",
       "      <td>460</td>\n",
       "      <td>300</td>\n",
       "      <td>0.652174</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>373</td>\n",
       "      <td>160</td>\n",
       "      <td>0.428954</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>378</td>\n",
       "      <td>126</td>\n",
       "      <td>0.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>342</td>\n",
       "      <td>90</td>\n",
       "      <td>0.263158</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>429</td>\n",
       "      <td>90</td>\n",
       "      <td>0.209790</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>709</td>\n",
       "      <td>79</td>\n",
       "      <td>0.111425</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>280</td>\n",
       "      <td>5</td>\n",
       "      <td>0.017857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"7\" valign=\"top\">3</th>\n",
       "      <th>1</th>\n",
       "      <td>206</td>\n",
       "      <td>101</td>\n",
       "      <td>0.490291</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>94</td>\n",
       "      <td>24</td>\n",
       "      <td>0.255319</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>84</td>\n",
       "      <td>12</td>\n",
       "      <td>0.142857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>84</td>\n",
       "      <td>16</td>\n",
       "      <td>0.190476</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>84</td>\n",
       "      <td>12</td>\n",
       "      <td>0.142857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>99</td>\n",
       "      <td>4</td>\n",
       "      <td>0.040404</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>31</td>\n",
       "      <td>1</td>\n",
       "      <td>0.032258</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     Churn               \n",
       "                     count  sum      mean\n",
       "ML_group tenure_year                     \n",
       "0        1            1403  598  0.426230\n",
       "         2             580  125  0.215517\n",
       "         3             414   55  0.132850\n",
       "         4             322   40  0.124224\n",
       "         5             307   21  0.068404\n",
       "         6             313   10  0.031949\n",
       "         7              51    0  0.000000\n",
       "1        1             460  300  0.652174\n",
       "         2             373  160  0.428954\n",
       "         3             378  126  0.333333\n",
       "         4             342   90  0.263158\n",
       "         5             429   90  0.209790\n",
       "         6             709   79  0.111425\n",
       "         7             280    5  0.017857\n",
       "3        1             206  101  0.490291\n",
       "         2              94   24  0.255319\n",
       "         3              84   12  0.142857\n",
       "         4              84   16  0.190476\n",
       "         5              84   12  0.142857\n",
       "         6              99    4  0.040404\n",
       "         7              31    1  0.032258"
      ]
     },
     "execution_count": 348,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "company.groupby(['ML_group','tenure_year']).agg({'Churn':['count','sum','mean']})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "366a7755-c96f-4348-8f5f-177038e7d7e5",
   "metadata": {},
   "source": [
    "- Cunclusions by \"ML group 1\" (Active Customers):\n",
    "- 65% of this service's customers will likely to end their use withing the first buissnes year\n",
    "- 30-40% bounce rate within the next to years\n",
    "- In year 5-6 the incrising of active customers may suguest reconecting unactive custumers. Not enough data to explore this theory."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 349,
   "id": "6a35f52a-51fc-460e-8fa9-fc229b9a032c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>MonthlyCharges</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>sum</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tenure_year</th>\n",
       "      <th>ML_group</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">1</th>\n",
       "      <th>0</th>\n",
       "      <td>73668.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>35252.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7058.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">2</th>\n",
       "      <th>0</th>\n",
       "      <td>31039.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>29005.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3668.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">3</th>\n",
       "      <th>0</th>\n",
       "      <td>23143.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>30359.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3548.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">4</th>\n",
       "      <th>0</th>\n",
       "      <td>17602.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>28412.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3674.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">5</th>\n",
       "      <th>0</th>\n",
       "      <td>17378.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>35920.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3883.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">6</th>\n",
       "      <th>0</th>\n",
       "      <td>18165.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>60139.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4981.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">7</th>\n",
       "      <th>0</th>\n",
       "      <td>2723.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>24640.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1848.35</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     MonthlyCharges\n",
       "                                sum\n",
       "tenure_year ML_group               \n",
       "1           0              73668.65\n",
       "            1              35252.60\n",
       "            3               7058.65\n",
       "2           0              31039.45\n",
       "            1              29005.85\n",
       "            3               3668.10\n",
       "3           0              23143.45\n",
       "            1              30359.95\n",
       "            3               3548.60\n",
       "4           0              17602.45\n",
       "            1              28412.90\n",
       "            3               3674.75\n",
       "5           0              17378.45\n",
       "            1              35920.65\n",
       "            3               3883.70\n",
       "6           0              18165.40\n",
       "            1              60139.75\n",
       "            3               4981.35\n",
       "7           0               2723.40\n",
       "            1              24640.15\n",
       "            3               1848.35"
      ]
     },
     "execution_count": 349,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "company.groupby(['tenure_year','ML_group']).agg ({'MonthlyCharges':[sum]})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7ca0c198-e286-4609-a4ca-20811eb1a40d",
   "metadata": {},
   "source": [
    "<br>\n",
    "<hr class=\"dotted\">\n",
    "<br>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5afa015e-2b1f-40bc-8e70-9988697d7b19",
   "metadata": {},
   "outputs": [],
   "source": [
    "sns.set_theme(style=\"whitegrid\")\n",
    "# Draw a nested barplot by species and sex\n",
    "H = sns.catplot(\n",
    "    data=company, kind=\"bar\",\n",
    "    x=\"tenure_year\", y=\"ML_group\", hue=\"MonthlyCharges\",\n",
    "    ci=\"sd\", palette=\"dark\", alpha=.6, height=6\n",
    ")\n",
    "H.despine(left=True)\n",
    "H.set_axis_labels(\"\", \"Year\")\n",
    "H.legend.set_title(\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "962bff02-8a12-4a9b-8e8e-276273f574fc",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
